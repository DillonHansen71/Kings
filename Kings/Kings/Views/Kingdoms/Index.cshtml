@model IEnumerable<Kings.Models.ManageViewModels.Kingdom>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
<h2>Welcome @User.Identity.Name</h2>

<p>
    <a asp-action="KingdomOverview">Kindom Overview Page!</a>
</p>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.KingID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Citizen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.KingID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Citizen)
                </td>
                <td id="gold">
                    @Html.DisplayFor(modelItem => item.Gold)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdated)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a> |
                    <a asp-action="UpdateResourcesAsync" asp-route-id="@item.ID">Calculate Gold</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- jquery link -->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<script>
    function updateGold() {
        // Gets the current value as int
        var goldval = parseInt($('#1').text())
        // updatedgold euqlas the current value plus 1
        var updatedgold = goldval + 1;
        // sets the text equal
        $('#1').text(updatedgold);
    }
    // change $item.ID to "Gold $item.ID"
    function updateGold2(goldvalue, id) {
        //adds 1 to the goldvalue that is displayed
        var updatedgold = goldvalue + 1;
        //sets the text equal to the new value
        $(id).text(updatedgold);
    }
    //TODO: Finish new function that will target all gold id's. The idea is to call update gold function in the kingdoms function. The findgold function will find all the id's with gold and fill in the parameters.
    function findgold() {
        $(gold).each(function () {
            console.log($(this).text());

        });
    }

    setInterval(function () {
        //updateGold();
        findgold();
    }, 1000);

</script>